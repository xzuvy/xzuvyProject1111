//
//  InfoView.swift
//  xzuvyProject1111
//
//  Created by Peter Clarke on 06.02.2023.
//

import SwiftUI

struct InfoView: View {
    
    private let spravkaList : [SpravkaItem] = [
        SpravkaItem(spravka: "üìö", name: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞", description: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:\n1)–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ë–î –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è;\n2)–ò–º–µ–µ—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.\n \n    –ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç:\n1)–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö —Å–µ—Ä–∏–∞–ª–∞ 'Vikings'\n2)–ò–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞\n3)–ò–≥—Ä–∞ –∑–∞–ø–æ–º–∏–Ω–∞–π –∫–∞—Ä—Ç–∏–Ω–∫–∏."),
        SpravkaItem(spravka: "üß©", name: "–ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç?", description: "–ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç:\n1)–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö —Å–µ—Ä–∏–∞–ª–∞ 'Vikings'\n2)–ò–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞\n3)–ò–≥—Ä–∞ –∑–∞–ø–æ–º–∏–Ω–∞–π –∫–∞—Ä—Ç–∏–Ω–∫–∏\n \n –ß—Ç–æ –∏–∑ —Å–µ–±—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–∞–∂–¥—ã–π –ø—É–Ω–∫—Ç?\n1)–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö' –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≥–µ—Ä–æ—è —Å–µ—Ä–∏–∞–ª–∞ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ—Å–ª–µ —á–µ–≥–æ –¥–∞—ë—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π\n2)–ò–≥—Ä–∞ –≤ —Å–ª–æ–≤–∞ - –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –¥–≤—É–º –∏–≥—Ä–æ–∫–∞–º –¥–∞–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∏ –±—É–¥—É—Ç —Å–æ–±–∏—Ä–∞—Ç—å —Å–ª–æ–≤–∞, –∞ —Ç–∞–∫–∂–µ –≤–≤–µ—Å—Ç–∏ –≤ –¥–≤—É—Ö –ø–æ–ª—è—Ö –∏–º—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞.\n3)–ò–≥—Ä–∞ –∑–∞–ø–æ–º–∏–Ω–∞–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ - –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–µ—Ä–µ–¥ –∏–≥—Ä–æ–∫–æ–º –ª–µ–∂–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∫–∞–∂–¥—É—é –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∏ –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–Ω–∏—Ç—å –≥–¥–µ –ª–µ–∂–∏—Ç –¥—Ä—É–≥–∞—è —Ç–æ—á–Ω–æ —Ç–∞–∫–∞—è –∂–µ –∫–∞—Ä—Ç–∏–Ω–∫–∞.")
        
    ]
    
    @State var startView = false
    var body: some View {
        
        NavigationView {
            List(spravkaList) { SpravkaItem in
                NavigationLink(destination: DetalisView(spravkaItem: SpravkaItem)){
                    HStack {
                        SpravkaCircleView(spravkaItem: SpravkaItem)
                        Text(SpravkaItem.name)
                            .font(.headline)
                        
                    }
                    .padding(5)
                }
                
            }
            .navigationBarTitle(Text("–°–ø—Ä–∞–≤–∫–∞"))
            .toolbar{
                Button("Home"){
                    startView.toggle()
                }
            }
        }
        .background(Image("infoView"))
        .fullScreenCover(isPresented: $startView) {
            StartView()
        
        }
        
        
    }
    
}

struct DetalisView : View{
    let spravkaItem : SpravkaItem
    
    var body : some View{
        VStack{
            HStack{
                SpravkaCircleView(spravkaItem: spravkaItem)
                    .padding(5)
                
                Text(spravkaItem.name)
                    .font(.largeTitle)
                    .bold()
            }
            Text(spravkaItem.description)
                .padding(.top)
        }
        .padding()
        .navigationBarTitle(Text(spravkaItem.name))
    }
}

struct SpravkaCircleView : View{
    let spravkaItem : SpravkaItem
    var body: some View {
        ZStack{
            Text(spravkaItem.spravka)
                .shadow(radius: 3)
                .font(.largeTitle)
                .frame(width : 65 , height: 65)
                .overlay(
                    Circle().stroke(Color.purple, lineWidth: 3)
                )
        }
    }
}

struct SpravkaItem : Identifiable {
    let id = UUID()
    let spravka : String
    let name : String
    let description : String
    
}


struct InfoView_Previews: PreviewProvider {
    static var previews: some View {
        InfoView()
    }
}
